Ethnicity <- read.csv("../Data/Camden/tables/KS201EW_oa11.csv")
Qualifications <-read.csv("../Data/Camden/tables/KS501EW_oa11.csv")
Employment <-read.csv("../Data/Camden/tables/KS601EW_oa11.csv")
Ethnicity <- read.csv("./Data/Camden/tables/KS201EW_oa11.csv")
Rooms <- read.csv("./Data/Camden/tables/KS403EW_oa11.csv")
Qualifications <-read.csv("./Data/Camden/tables/KS501EW_oa11.csv")
Employment <-read.csv("./Data/Camden/tables/KS601EW_oa11.csv")
View(Employment)
Ethnicity <- Ethnicity[, c(1, 21)]
Rooms <- Rooms[, c(1, 13)]
Employment <- Employment[, c(1, 20)] Qualifications <- Qualifications[, c(1, 20)]
Ethnicity <- Ethnicity[, c(1, 21)]
Ethnicity
library(tidyverse)
dim(Ethnicity)
Ethnicity <- read.csv("./Data/Camden/tables/KS201EW_oa11.csv")
Rooms <- read.csv("./Data/Camden/tables/KS403EW_oa11.csv")
Qualifications <-read.csv("./Data/Camden/tables/KS501EW_oa11.csv")
Employment <-read.csv("./Data/Camden/tables/KS601EW_oa11.csv")
Ethnicity <- Ethnicity[, c(1, 21)]
Rooms <- Rooms[, c(1, 13)]
Employment <- Employment[, c(1, 20)] Qualifications <- Qualifications[, c(1, 20)]
Employment <- Employment[, c(1, 20)]
Qualifications <- Qualifications[, c(1, 20)]
Employment
names(Employment)[2] <- "Unemployed"
names(Ethnicity)<- c("OA", "White_British")
names(Rooms)<- c("OA", "Low_Occupancy")
names(Employment)<- c("OA", "Unemployed")
names(Qualifications)<- c("OA", "Qualification")
Ethnicity%>%
merge(Rooms, by="OA")%>%
merge(Employment, by="OA")%>%
merge(Qualifications, by="OA") -> Census.Data
write.csv(Census.Data, "practical_data.csv", row.names=F)
Census.Data%>%head()
mean(Census.Data$Unemployed)
median(Census.Data$Unemployed)
range(Census.Data$Unemployed)
names(Census.Data)
vioplot(Census.Data$Unemployed, Census.Data$Qualification, Census.Data$White_British, Census.Data$Low_Occupancy, ylim=c(0,100),
col = "dodgerblue", rectCol="dodgerblue3", colMed="dodgerblue4", names=c("Unemployed", "Qualifications", "White British", "Occupancy"))
library(vioplot)
vioplot(Census.Data$Unemployed, Census.Data$Qualification, Census.Data$White_British, Census.Data$Low_Occupancy, ylim=c(0,100),
col = "dodgerblue", rectCol="dodgerblue3", colMed="dodgerblue4", names=c("Unemployed", "Qualifications", "White British", "Occupancy"))
install.packages("vioplot")
library(vioplot)
vioplot(Census.Data$Unemployed, Census.Data$Qualification, Census.Data$White_British, Census.Data$Low_Occupancy, ylim=c(0,100),
col = "dodgerblue", rectCol="dodgerblue3", colMed="dodgerblue4", names=c("Unemployed", "Qualifications", "White British", "Occupancy"))
symbols(Census.Data$Unemployed, Census.Data$Qualification,
circles = Census.Data$White_British,
fg="white", bg ="purple", inches = 0.2, xlab="% in full time employment", ylab="% With a Qualification") +
# adds a regression line, sets the colour to red
abline(lm(Census.Data$Qualification~ Census.Data$Unemployed), col="red")
# bubble plot
# a bubble plot with a dotted regression line
symbols(Census.Data$Unemployed, Census.Data$Qualification,
circles = Census.Data$White_British,
fg="white", bg ="purple", inches = 0.2, xlab="% in full time employmented", ylab="% With a Qualification") +
abline(lm(Census.Data$Qualification~ Census.Data$Unemployed), col="red", lwd=2, lty=2)
# Runs a Pearson's correlation
cor(Census.Data$Unemployed, Census.Data$Qualification)
# Runs a Pearson's correlation
cor.test(Census.Data$Unemployed, Census.Data$Qualification)
#Runs a Spearman's correlation
cor.test(Census.Data$Unemployed, Census.Data$Qualification, method="spearman")
#Runs a Spearman's correlation
cor.test(Census.Data$Unemployed, Census.Data$Qualification, method="spearman")
#Runs a Spearman's correlation
a <- cor.test(Census.Data$Unemployed, Census.Data$Qualification, method="spearman")
#Runs a Spearman's correlation
cor.test(Census.Data$Unemployed, Census.Data$Qualification, method="spearman")
# creates a data1 object which does not include the 1st column from the original data
data1 <- Census.Data[,2:5]
# creates correlation matrix
cor(data1)
round(cor(data1),2)
qplot(x=Var1, y=Var2, data=melt(cor(data1, use="p")), fill=value, geom="tile") + scale_fill_gradient2(limits=c(-1, 1))
library(reshape2)
qplot(x=Var1, y=Var2, data=melt(cor(data1, use="p")), fill=value, geom="tile") + scale_fill_gradient2(limits=c(-1, 1))
# Regression
model_1 <- lm(Census.Data$Qualification~ Census.Data$Unemployed)
plot(Census.Data$Unemployed, Census.Data$Qualification, xlab="% Unemployed", ylab="% With a Qualification") + abline (model_1)
confint(model_1, level= 0.95)
odel_2 <- lm(Census.Data$Qualification~ Census.Data$Unemployed + Census.Data$White_British)
# view the model summary
summary(model_2)
plot(Census.Data$Unemployed, Census.Data$Qualification, xlab="% Unemployed", ylab="% With a Qualification") +
abline (model_1) + abline(model_2, col="red")
odel_2 <- lm(Census.Data$Qualification~ Census.Data$Unemployed + Census.Data$White_British)
# view the model summary
summary(model_2)
model_2 <- lm(Census.Data$Qualification~ Census.Data$Unemployed + Census.Data$White_British)
# view the model summary
summary(model_2)
plot(Census.Data$Unemployed, Census.Data$Qualification, xlab="% Unemployed", ylab="% With a Qualification") +
abline (model_1) + abline(model_2, col="red")
library("rgdal")
library("rgeos")
install.packages("rgdal")
install.packages("rgeos")
library("rgdal")
library("rgeos")
install.packages(rgdal)
install.packages('rgdal')
install.packages('rgdal')
install.packages("sf")
library("rgdal")
library(sf)
library("rgeos")
install.packages("terra")
library(terra)
Output.Areas<- readOGR(".", "Camden_oa11")
?readOGR
??readOGR
library(rgdal)
Output.Areas<- st_read(".", "Camden_oa11")
Output.Areas<- st_drivers(".", "Camden_oa11")
Output.Areas
install.packages("https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.5-28.tar.gz", repos = NULL, type = "source")
library(rgdal)
library("rgdal")
library(rgdal)
install.packages("rgdal", dependencies = TRUE)
library(sf)
# 加載 shapefile（輸出區域 shapefile）
Output.Areas <- st_read("Data/Camden_oa11.shp")
# 加載 shapefile（輸出區域 shapefile）
Output.Areas <- st_read("./Data/Camden_oa11.shp")
# 加載 shapefile（輸出區域 shapefile）
Output.Areas <- st_read("../Data/Camden_oa11.shp")
pwd
# 加載 shapefile（輸出區域 shapefile）
Output.Areas <- st_read("./Data/Camden_oa11.shp/Camden_oa11.shp")
# 加載 shapefile（輸出區域 shapefile）
Output.Areas <- st_read("./Data/Camden_oa11/Camden_oa11.shp")
# 繪製 shapefile
plot(st_geometry(Output.Areas))
OA.Census <- merge(Output.Areas, Census.Data, by.x="OA11CD", by.y="OA")
proj4string(OA.Census) <- CRS("+init=EPSG:27700")
# proj4string(OA.Census) <- CRS("+init=EPSG:27700")
st_crs(OA.Census) <- 27700
library(tmap)
library(leaflet)
install.packages('tmap')
install.packages('leaflet')
library(tmap)
library(leaflet)
# this will prodyce a quick map of our qualification variable
qtm(OA.Census, fill = "Qualification")
OA.Census
# Creates a simple choropleth map of our qualification variable
tm_shape(OA.Census) + tm_fill("Qualification")
library(RColorBrewer)
display.brewer.all()
# setting a colour palette
tm_shape(OA.Census) + tm_fill("Qualification", palette = "-Greens")
# changing the intervals
tm_shape(OA.Census) + tm_fill("Qualification", style = "quantile", palette = "Reds")
# setting a colour palette
tm_shape(OA.Census) + tm_fill("Qualification", palette = "-Greens")
# changing the intervals
tm_shape(OA.Census) + tm_fill("Qualification", style = "quantile", palette = "Reds")
# number of levels
tm_shape(OA.Census) + tm_fill("Qualification", style = "quantile", n = 7, palette = "Reds")
# includes a histogram in the legend
tm_shape(OA.Census) + tm_fill("Qualification", style = "quantile", n = 5, palette = "Reds", legend.hist = TRUE)
tm_shape(OA.Census) + tm_fill("Qualification", palette = "Reds") + tm_borders(alpha=.4)
# includes a histogram in the legend
tm_shape(OA.Census) + tm_fill("Qualification", style = "quantile", n = 5, palette = "Reds", legend.hist = TRUE)
# add borders
tm_shape(OA.Census) + tm_fill("Qualification", palette = "Reds") + tm_borders(alpha=.4)
# north arrow
tm_shape(OA.Census) + tm_fill("Qualification", palette = "Reds") + tm_borders(alpha=.4) +
tm_compass()
# adds in layout, gets rid of frame
tm_shape(OA.Census) + tm_fill("Qualification", palette = "Reds",
style = "quantile", title = "% with a Qualification") +
tm_borders(alpha=.4) +
tm_compass() +
tm_layout(title = "Camden, London", legend.text.size = 1.1,
legend.title.size = 1.4, legend.position = c("right", "top"), frame = FALSE)
# Saving the shapefile
writeOGR(OA.Census, dsn = "./",
layer = "Census_OA_Shapefile", driver="ESRI Shapefile")
# Saving the shapefile
st_write(OA.Census, "Census_OA_Shapefile.shp", driver = "ESRI Shapefile")
library(sf)
# Saving the shapefile
st_write(OA.Census, "Census_OA_Shapefile.shp", driver = "ESRI Shapefile")
# Saving the shapefile
st_write(OA.Census, "Census_OA_Shapefile.shp", driver = "GeoJSON")
